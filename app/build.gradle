plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
    //getReportsDirectory().setFrom(layout.buildDirectory.dir('customJacocoReportDir'))
}

// Only needs to be included if we plan on using Robolectric tests
/*tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}*/

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "uk.co.scribbleapps.accesscaretest"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
        reports {
            xml.enabled(true)
            html.enabled(true)
        }

        def fileFilter = ['**/R.class',
                          '**/R$*.class',
                          '**/BuildConfig.*',
                          '**/Manifest*.*',
                          '**/data/*.*',
                          '**/generated/callback/*.*',
                          '**/lambda$*.class',
                          '**/lambda.class',
                          '**/*lambda.class',
                          '**/*lambda*.class',
                          '**/*Test*.*',
                          'android/**/*.*']
        def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
        def mainSrc = "${project.projectDir}/src/main/java"

        getSourceDirectories().setFrom(files([mainSrc]))
        getClassDirectories().setFrom(files([debugTree]))
        getExecutionData().setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))
    }

    task welcome {
        doLast {
            println 'Welcome to the ACP Test App'
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.30"
    implementation 'androidx.exifinterface:exifinterface:1.3.3'

    //Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    //debugImplementation "androidx.fragment:fragment-testing:1.3.6" - causes JaCoCo build error

    // Biometric support
    implementation "androidx.biometric:biometric:1.1.0"

}